<?php

function aeara_sub_preprocess_html(&$variables)
{
  $node = \Drupal::request()->get('node');

  if ($node instanceof \Drupal\node\NodeInterface) {
    $variables['node'] = $node;

    $content_type = $node->getType();

    if ($content_type == 'onboarding' && \Drupal::currentUser()->isAuthenticated()) {
      $response = new \Symfony\Component\HttpFoundation\RedirectResponse('/account');
      $response->send();
    }

    if ($content_type == 'user_account' && !\Drupal::currentUser()->isAuthenticated()) {
      $response = new \Symfony\Component\HttpFoundation\RedirectResponse('/login');
      $response->send();
    }

    if (strpos(\Drupal::request()->getRequestUri(), 'delivery-addresses') !== false) {
      $user_id = \Drupal::currentUser()->id();
      $response = new \Symfony\Component\HttpFoundation\RedirectResponse('/user/' . $user_id . '/address-book');
      $response->send();
    }

    if (strpos(\Drupal::request()->getRequestUri(), 'edit-my-profile') !== false) {
      $user_id = \Drupal::currentUser()->id();
      $response = new \Symfony\Component\HttpFoundation\RedirectResponse('/user/' . $user_id . '/edit');
      $response->send();
    }

    if (strpos(\Drupal::request()->getRequestUri(), 'my-wishlist') !== false) {
      $user_id = \Drupal::currentUser()->id();
      $response = new \Symfony\Component\HttpFoundation\RedirectResponse('/user/' . $user_id . '/wishlist');
      $response->send();
    }
  }

  return $variables;
}

function aeara_sub_preprocess_block(&$vars)
{
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node instanceof \Drupal\node\NodeInterface) {
    $vars['node'] = $node;
  }

  return $vars;
}

function aeara_sub_preprocess_views_view_table(&$vars)
{
  $vars['attributes']['class'][] = 'table table-striped shopping-cart-table';
}

function aeara_sub_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id)
{
  $form['revision_information']['#access'] = FALSE;
}

function aeara_sub_user_login($account)
{
  // We want to redirect user on login.
  $response = new RedirectResponse("/account");
  $response->send();
  return;
}

// Remove login and register menus when user is logged in
function aeara_sub_preprocess_menu(&$variables, $hook)
{
  if ($hook == 'menu') {
    // Use array_filter() for cleaner item removal and maintainability.
    $variables['items'] = array_filter($variables['items'], function ($item) {
      $url = $item['url']->toString();
      // Ensure case-insensitive comparison for login/register paths.
      $isLoginOrRegister = stristr($url, 'login') || stristr($url, 'register');
      $isAccountPage = stristr($url, 'account');

      // Check for authentication using the current user account.
      $isAuthenticated = \Drupal::currentUser()->isAuthenticated();

      if ($isAuthenticated) {
        return !$isLoginOrRegister;
      } else {
        return !$isAccountPage;
      }
    });
  }
}

