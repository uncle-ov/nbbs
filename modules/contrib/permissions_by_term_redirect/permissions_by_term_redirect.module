<?php

/**
 * @file
 * Contains permissions_by_term_redirect.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 */
function permissions_by_term_redirect_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the permissions_by_term_redirect module.
    case 'help.page.permissions_by_term_redirect':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Sends users requesting term-restricted content to the login form and back to the requested content in case of a successful login.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_user_login().
 */
function permissions_by_term_redirect_user_login($account) {
  $current_route = \Drupal::routeMatch()->getRouteName();
  if (!in_array($current_route, ['user.reset', 'user.reset.login'])) {
    $request = \Drupal::request();
    if ($request->cookies->has('Drupal_visitor_permissions_by_term_redirect_requested_nid')) {
      $requested_nid = $request->cookies->getInt('Drupal_visitor_permissions_by_term_redirect_requested_nid');
      if (is_numeric($requested_nid)) {
        user_cookie_delete('permissions_by_term_redirect.requested_nid');
        \Drupal::service('request_stack')->getCurrentRequest()
          ->query->set('destination', Url::fromUri('entity:node/' . $requested_nid)->toString());
      }
    }
  }
}
